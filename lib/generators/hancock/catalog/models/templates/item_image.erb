class <%= camelcased_class_name %> < Hancock::Catalog::ItemImage
  embedded_in :item, class_name: "<%= camelcased_item_class_name %>"
  alias :<%= underscored_class_name %> :item

  def self.find(id)
    find_through(<%= camelcased_item_class_name %>, 'item_images', id)
  end

  # # after_save :image_auto_rails_admin_jcrop
  # def image_auto_rails_admin_jcrop
  #   auto_rails_admin_jcrop(:image) # or nil for cancel autocrop
  # end

  # # hancock_cms_attached_file(:image)
  # def image_styles
  #   super
  # end

  # def image_jcrop_options
  #   super
  # end


  ############# rails_admin ##############
  def self.rails_admin_add_fields
    [] #super
  end

  def self.rails_admin_add_config(config)
    #super(config)
  end

  def admin_can_user_defined_actions
    [].freeze
  end
  def admin_cannot_user_defined_actions
    [].freeze
  end
  def manager_can_user_defined_actions
    [].freeze
  end
  def manager_cannot_user_defined_actions
    [].freeze
  end
  def rails_admin_user_defined_visible_actions
    [].freeze
  end

  rails_admin(&Hancock::Catalog::Admin::ItemImage.config(nil, rails_admin_add_fields) { |config|
    rails_admin_add_config(config)
  })

end
